@page "/edit-car/{CarId:int}"
@using Microsoft.JSInterop
@using ProksRent_WebAPI.DTOs
@using ProksRent_WebAPI.Services
@inject ICarService CarService
@inject NavigationManager NavigationManager
@inject IJSRuntime JS

<PageTitle>@(CarId == 0 ? "Add New Car" : "Edit Car")</PageTitle>

<EditForm Model="@carDto" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="Model">Model:</label>
        <InputText id="Model" class="form-control" @bind="carDto.Model" />
    </div>
    <div>
        <label for="Brand">Brand:</label>
        <InputText id="Brand" class="form-control" @bind="carDto.BrandName" />
    </div>
    <div>
        <label for="Year">Year:</label>
        <InputNumber id="Year" class="form-control" @bind="carDto.Year" />
    </div>
    <div>
        <label for="CarNumber">Car Number:</label>
        <InputText id="CarNumber" class="form-control" @bind="carDto.CarNumber" />
    </div>
    <div>
        <button type="submit" class="btn btn-primary">Save</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public int CarId { get; set; }
    
    private CarDto carDto = new CarDto();

    protected override async Task OnInitializedAsync()
    {
        if (CarId != 0)
        {
            carDto = await CarService.GetCarByIdAsync(CarId);
        }
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            if (CarId == 0)
            {
                await CarService.AddCarAsync(carDto);
            }
            else
            {
                await CarService.UpdateCarAsync(carDto);
            }

            NavigationManager.NavigateTo("/cars");
        }
        catch (Exception ex)
        {
            await JS.InvokeVoidAsync("alert", "An error occurred while saving the car.");
        }
    }
}
