@page "/edit-booking/{Id:int}"
@using ProksRent_WebAPI.DTOs
@using ProksRent_WebAPI.Services
@inject IBookingService BookingService
@inject NavigationManager NavigationManager

<PageTitle>Edit Booking</PageTitle>

@if (booking == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="booking" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label>Start Date:</label>
            <InputDate @bind="booking.StartDate" class="form-control" />
        </div>
        <div class="mb-3">
            <label>End Date:</label>
            <InputDate @bind="booking.EndDate" class="form-control" />
        </div>
        <div class="mb-3">
            <label>Confirmed:</label>
            <InputCheckbox @bind="booking.IsConfirmed" class="form-check-input" />
        </div>
        <div class="mb-3">
            <label>Car ID:</label>
            <InputNumber @bind="booking.CarId" class="form-control" />
        </div>
        <div class="mb-3">
            <label>User ID:</label>
            <InputText @bind="booking.UserId" class="form-control" />
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-secondary" @onclick="GoBack">Cancel</button>
    </EditForm>
}

@code {
    [Parameter] public int Id { get; set; }
    private BookingDto? booking;

    protected override async Task OnInitializedAsync()
    {
        if (Id == 0)
        {
            booking = new BookingDto
            {
                StartDate = DateTime.Today,
                EndDate = DateTime.Today.AddDays(1),
                IsConfirmed = false,
                CarId = 0,
                UserId = ""
            };
        }
        else
        {
            booking = await BookingService.GetBookingByIdAsync(Id);
        }
    }

    private async Task HandleValidSubmit()
    {
        if (Id == 0)
        {
            await BookingService.AddBookingAsync(booking);
        }
        else
        {
            await BookingService.UpdateBookingAsync(booking);
        }

        NavigationManager.NavigateTo("/bookings");
    }

    private void GoBack() => NavigationManager.NavigateTo("/bookings");
}